name: Latest

on:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
      
      - name: Enable Corepack
        run: corepack enable
      
      - name: Cache Linux pnpm
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-
      
      - name: Cache Windows pnpm
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v4
        with:
          path: D:\.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install Dependencies
        run: pnpm install

      - name: Build Electron App
        run: pnpm run build
      
      - name: Upload Linux Artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-release-assets-${{ github.sha }}
          path: release/*/jm-desktop-Linux-*.AppImage
  
      - name: Upload Windows Artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-release-assets-${{ github.sha }}
          path: release/*/jm-desktop-Windows-*.zip